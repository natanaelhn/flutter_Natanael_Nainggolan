// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_application_unit_testing/test/model/api/api_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i3;
import 'package:flutter_application_unit_testing/model/api_service.dart' as _i4;
import 'package:flutter_application_unit_testing/model/food_object.dart' as _i6;
import 'package:flutter_application_unit_testing/model/model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeModel_0 extends _i1.SmartFake implements _i2.Model {
  _FakeModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_1 extends _i1.SmartFake implements _i3.Dio {
  _FakeDio_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i4.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Model get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _FakeModel_0(
          this,
          Invocation.getter(#model),
        ),
      ) as _i2.Model);
  @override
  _i3.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_1(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i3.Dio);
  @override
  _i5.Future<List<_i6.FoodObject>> fetchFood() => (super.noSuchMethod(
        Invocation.method(
          #fetchFood,
          [],
        ),
        returnValue: _i5.Future<List<_i6.FoodObject>>.value(<_i6.FoodObject>[]),
      ) as _i5.Future<List<_i6.FoodObject>>);
}

/// A class which mocks [Model].
///
/// See the documentation for Mockito's code generation for more information.
class MockModel extends _i1.Mock implements _i2.Model {
  MockModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get endpoint => (super.noSuchMethod(
        Invocation.getter(#endpoint),
        returnValue: '',
      ) as String);
  @override
  set endpoint(String? _endpoint) => super.noSuchMethod(
        Invocation.setter(
          #endpoint,
          _endpoint,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i6.FoodObject> get listFood => (super.noSuchMethod(
        Invocation.getter(#listFood),
        returnValue: <_i6.FoodObject>[],
      ) as List<_i6.FoodObject>);
  @override
  set listFood(List<_i6.FoodObject>? _listFood) => super.noSuchMethod(
        Invocation.setter(
          #listFood,
          _listFood,
        ),
        returnValueForMissingStub: null,
      );
}
